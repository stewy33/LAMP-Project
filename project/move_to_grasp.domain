
# AUTOGENERATED. DO NOT EDIT.
# Configuration file for CAN domain. Blank lines and lines beginning with # are filtered out.

# implicity, all types require a name
Types: Robot, RobotPose, CollisionShape 

# Define the class location of each non-standard attribute type used in the above parameter type descriptions.

Attribute Import Paths: Vector1d opentamp.core.util_classes.matrix, Vector2d opentamp.core.util_classes.matrix, Vector3d opentamp.core.util_classes.matrix, ArmPose7d opentamp.core.util_classes.matrix, Table opentamp.core.util_classes.items, Box opentamp.core.util_classes.items, Basket opentamp.core.util_classes.items, Cloth opentamp.core.util_classes.items, Can opentamp.core.util_classes.items, Door opentamp.core.util_classes.items, Sphere opentamp.core.util_classes.items, Baxter opentamp.core.util_classes.robots, Sawyer opentamp.core.util_classes.robots, Panda opentamp.core.util_classes.robots

Predicates Import Path: opentamp.core.util_classes.robot_predicates


Subtypes: Obstacle, Reachable - CollisionShape; Item, Target, SlideTarget, Handle, Button - Reachable; Cloth, Can, Box, Basket, Sphere - Item; Button - Can; Door - Obstacle; ClothTarget, BoxTarget, CanTarget, BasketTarget - Target; Baxter, Sawyer, Panda - Robot; BaxterPose, SawyerPose, PandaPose - RobotPose

Primitive Predicates: value, Reachable, Vector3d; rotation, Reachable, Vector3d; pose, CollisionShape, Vector3d; rotation, CollisionShape, Vector3d; pose, Item, Vector3d; rotation, Item, Vector3d; value, Target, Vector3d; rotation, Target, Vector3d; value, SlideTarget, Vector3d; rotation, SlideTarget, Vector3d; geom, Basket, Basket; pose, Basket, Vector3d; rotation, Basket, Vector3d; geom, Cloth, Cloth; pose, Cloth, Vector3d; rotation, Cloth, Vector3d; geom, Can, Can; pose, Can, Vector3d; rotation, Can, Vector3d; geom, Handle, Can; pose, Handle, Vector3d; rotation, Handle, Vector3d; geom, Sphere, Sphere; pose, Sphere, Vector3d; rotation, Sphere, Vector3d; geom, Box, Box; pose, Box, Vector3d; rotation, Box, Vector3d; geom, BasketTarget, Basket; value, BasketTarget, Vector3d; rotation, BasketTarget, Vector3d; value, ClothTarget, Vector3d; rotation, ClothTarget, Vector3d; geom, ClothTarget, Cloth; value, CanTarget, Vector3d; rotation, CanTarget, Vector3d; geom, CanTarget, Can; value, BoxTarget, Vector3d; rotation, BoxTarget, Vector3d; geom, BoxTarget, Box; pose, Robot, Vector3d; rotation, Robot, Vector3d; value, RobotPose, Vector3d; rotation, RobotPose, Vector3d; geom, Obstacle, Box; pose, Obstacle, Vector3d; rotation, Obstacle, Vector3d; geom, Door, Door; pose, Door, Vector3d; rotation, Door, Vector3d; hinge, Door, Vector1d; geom, Baxter, Baxter; left, Baxter, ArmPose7d; left_gripper, Baxter, Vector2d; left_ee_pos, Baxter, Vector3d; left_ee_rot, Baxter, Vector3d; right, Baxter, ArmPose7d; right_gripper, Baxter, Vector2d; right_ee_pos, Baxter, Vector3d; right_ee_rot, Baxter, Vector3d; left, BaxterPose, ArmPose7d; left_gripper, BaxterPose, Vector2d; left_ee_pos, BaxterPose, Vector3d; left_ee_rot, BaxterPose, Vector3d; right, BaxterPose, ArmPose7d; right_gripper, BaxterPose, Vector2d; right_ee_pos, BaxterPose, Vector3d; right_ee_rot, BaxterPose, Vector3d; geom, Sawyer, Sawyer; right, Sawyer, ArmPose7d; right_gripper, Sawyer, Vector2d; right_ee_pos, Sawyer, Vector3d; right_ee_rot, Sawyer, Vector3d; right, SawyerPose, ArmPose7d; right_gripper, SawyerPose, Vector2d; right_ee_pos, SawyerPose, Vector3d; right_ee_rot, SawyerPose, Vector3d; geom, Panda, Panda; right, Panda, ArmPose7d; right_gripper, Panda, Vector2d; right_ee_pos, Panda, Vector3d; right_ee_rot, Panda, Vector3d; right, PandaPose, ArmPose7d; right_gripper, PandaPose, Vector2d; right_ee_pos, PandaPose, Vector3d; right_ee_rot, PandaPose, Vector3d

Derived Predicates: At, Reachable, Reachable; AtRot, Reachable, Reachable; AtInit, Item, Reachable; Near, Reachable, Reachable; RobotAt, Robot, RobotPose; IsMP, Robot; WithinJointLimit, Robot; Stationary, Reachable; Fixed, Reachable; StationaryRot, Reachable; StationaryNEq, Reachable, Reachable; StationaryBase, Robot; StationaryArms, Robot; StationaryLeftArm, Robot; StationaryRightArm, Robot; StationaryW, Obstacle; StationaryWNEq, Obstacle, Obstacle; StationaryWBase, Obstacle; StationaryXY, Reachable; StationaryYZ, Reachable; StationaryXZ, Reachable; CloseGripper, Robot; CloseGripperLeft, Robot; CloseGripperRight, Robot; OpenGripper, Robot; OpenGripperLeft, Robot; OpenGripperRight, Robot; Obstructs, Robot, CollisionShape; ObstructsHolding, Robot, CollisionShape, CollisionShape; Collides, CollisionShape, CollisionShape; RCollides, Robot, CollisionShape; RSelfCollides, Robot; EEReachable, Robot, Reachable; EEReachableLeft, Robot, Reachable; EEReachableRight, Robot, Reachable; EEApproachLeft, Robot, Reachable; EEApproachRight, Robot, Reachable; EEApproachAbsLeft, Robot, Reachable; EEApproachAbsRight, Robot, Reachable; EEApproachStackLeft, Robot, Reachable, Reachable; EEApproachStackRight, Robot, Reachable, Reachable; EERetreatLeft, Robot, Reachable; EERetreatRight, Robot, Reachable; EEWeakRetreatRight, Robot, Reachable; EERetreatAbsLeft, Robot, Reachable; EERetreatAbsRight, Robot, Reachable; EERetreatStackLeft, Robot, Reachable, Reachable; EERetreatStackRight, Robot, Reachable, Reachable; EEAtXYLeft, Robot, Reachable; EEAtXYRight, Robot, Reachable; EEAtXZLeft, Robot, Reachable; EEAtXZRight, Robot, Reachable; EEAtYZLeft, Robot, Reachable; EEAtYZRight, Robot, Reachable; EEAtRelXYLeft, Robot, Reachable; EEAtRelXYRight, Robot, Reachable; EEAtXRelLeft, Robot, Reachable; EEAtXRelRight, Robot, Reachable; EEAtYRelLeft, Robot, Reachable; EEAtYRelRight, Robot, Reachable; EEAtZRelLeft, Robot, Reachable; EEAtZRelRight, Robot, Reachable; EEAtRelXZLeft, Robot, Reachable; EEAtRelXZRight, Robot, Reachable; EEAtRelYZLeft, Robot, Reachable; EEAtRelYZRight, Robot, Reachable; Approach, Robot, Reachable; ApproachLeft, Robot, Reachable; ApproachRight, Robot, Reachable; NearApproach, Robot, Reachable; NearApproachLeft, Robot, Reachable; NearApproachRight, Robot, Reachable; NearRetreatRight, Robot, Reachable; EEReachableRot, Robot, Reachable; EEReachableLeftRot, Robot, Reachable; EEReachableRightRot, Robot, Reachable; ApproachRot, Robot, Reachable; ApproachLeftRot, Robot, Reachable; ApproachRightRot, Robot, Reachable; EEAtLeftRot, Robot, Reachable; EEAtRightRot, Robot, Reachable; NearApproachRot, Robot, Reachable; NearApproachLeftRot, Robot, Reachable; NearApproachRightRot, Robot, Reachable; InGripperLeft, Robot, Reachable; InGripperRight, Robot, Reachable; InGripper, Robot, Reachable; NearGripper, Robot, Reachable; NearGripperLeft, Robot, Reachable; NearGripperRight, Robot, Reachable; GripperAtLeft, Robot, Reachable; GripperAtRight, Robot, Reachable; GripperAt, Robot, Reachable; GrippersDownRot, Robot; LeftGripperDownRot, Robot; RightGripperDownRot, Robot; HeightBlock, Item, Item; AboveTable, Item; Lifted, Item, Robot; InReach, Reachable, Robot; Stacked, Item, Item; Stackable, Item, Item; DeskHeightBlock, Item, Item; SlideDoorAt, Reachable, Door; SlideDoorOpen, Reachable, Door; SlideDoorClose, Reachable, Door; SlideDoorAtOpen, Reachable, Door; SlideDoorAtClose, Reachable, Door; InSlideDoor, Item, Door; EEApproachInDoorLeft, Robot, Door; EERetreatInDoorLeft, Robot, Door; EEApproachInDoorRight, Robot, Door; EERetreatInDoorRight, Robot, Door; NearApproachInDoorLeft, Robot, Door; NearApproachInDoorRight, Robot, Door


# The first set of parentheses after the colon contains the
# parameters. The second contains preconditions and the third contains
# effects. This split between preconditions and effects is only used
# for task planning purposes. Our system treats all predicates
# similarly, using the numbers at the end, which specify active
# timesteps during which each predicate must hold



Action moveto 19: (?robot - Robot ?start - RobotPose ?end - RobotPose) (and (forall (?obj - Item)(not (Obstructs ?robot ?obj))) (forall (?obj - Item)(Stationary ?obj)) (forall (?obs - Obstacle) (StationaryW ?obs)) (IsMP ?robot) (WithinJointLimit ?robot) (forall (?w - Obstacle) (not (RCollides ?robot ?w))) )(and  (not (RobotAt ?robot ?start)) (RobotAt ?robot ?end) ) 1:17 0:17 0:17 0:17 0:18 1:17 18:17 18:17 